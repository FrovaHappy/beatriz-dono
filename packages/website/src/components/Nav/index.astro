---
import LoginButton from "./LoginButton";
import Logo from "./Logo.astro";
import LinkDonate from "./LinkDonate.astro";
import Button from "@components/Button.astro";
import type { Urls } from "@utils/urls";

interface Props {
  urls: Urls;
}

const { urls } = Astro.props as Props;
---

<nav>
  <meta data-url-api={urls.api} />
  <Logo />
  <ul class="links">
    <li><a href="/home">Wiki</a></li>
    <li><a href="/roadmap">Roadmap</a></li>
  </ul>

  <span class="spacer"></span>
  <!-- button github -->
  <div class="button-group">
    <Button type="only-icon" icon="discord" href={urls.discord} />
    <Button type="only-icon" icon="github" href={urls.github} />
    <span class="line"></span>
    <!-- button light/dark mode -->

    <Button type="only-icon" icon="moon" id="button-theme" />
    <LinkDonate kofi={urls.kofi} />
  </div>
  <LoginButton apiUrl={urls.api} oauthCallback={urls.oAuth} client:only />
</nav>
<x-phone>
  <i class="ti ti-menu button--icon"></i>
</x-phone>
<script>
  const buttonTheme = document.getElementById("button-theme");
  let theme =
    document.documentElement.getAttribute("data-theme") ??
    localStorage.getItem("theme");
  const changeTheme = (e: any) => {
    if (!e) return;
    theme = theme === "light" ? "dark" : "light";
    document.documentElement.setAttribute("data-theme", theme);
    localStorage.setItem("theme", theme);
  };
  buttonTheme?.addEventListener("click", changeTheme);
  changeTheme(null);

  const $menu = document.querySelector("x-phone")!;
  const $nav = document.querySelector("nav")!;
  $menu.addEventListener("click", () => {
    $nav.classList.toggle("show-menu");
  });
  $nav.addEventListener("click", (e) => {
    $nav.classList.remove("show-menu");
  });
</script>
<style lang="scss">
  nav {
    display: flex;
    height: 4rem;
    align-items: center;
    justify-content: space-between;
    gap: 0.625rem;
    padding: 1rem;
    border-bottom: 0.0313rem solid var(--font-color-10);
    @media (max-width: 768px) {
      display: none;
    }
  }
  .show-menu {
    display: none;
    @media (max-width: 768px) {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      padding: 40px;
      border-radius: var(--border-radius);
      background: var(--bg-color);
      z-index: var(--z-menu);
    }
  }
  x-phone {
    display: none;
    @media (max-width: 768px) {
      display: block;
      position: sticky;
      top: 20px;
      left: 40px;
      width: min-content;
      cursor: pointer;
      z-index: var(--z-menu-button);
      padding: 1rem;
      gap: 1rem;
      border-radius: var(--border-radius);
      background: var(--font-color-10);
      backdrop-filter: blur(0.25rem);
    }
  }

  .links {
    cursor: pointer;
    display: flex;
    align-items: center;
    a {
      padding: 0.375rem 0.85rem;
      border-radius: var(--border-radius);
      transition: all 0.2s ease-in-out;
    }
    a:hover {
      background: color-mix(in srgb, var(--font-color) 25%, transparent);
      color: var(--font-color);
    }
  }
  .spacer {
    flex-grow: 1;
  }
  .button-group {
    display: flex;
    gap: 0.625rem;
  }
  .line {
    width: 1px;
    height: 1.5rem;
    flex-shrink: 0;
    background: var(--font-color-10);
  }
  @media (max-width: 48rem) {
    .links {
      flex-direction: column;
      gap: 0.5rem;
      a {
        display: flex;
        font-size: 1.5rem;
        width: 50vw;
        justify-content: center;
        border-bottom: 1px solid var(--font-color-10);
      }
    }
    .button-group {
      flex-direction: row;
    }
  }
</style>
