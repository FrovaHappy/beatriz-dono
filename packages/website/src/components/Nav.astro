---
import getPublic from "@utils/getPublic";
import LoginButton from "./Nav/LoginButton";

const { urlApi, urlOathCallback, urlGithub } = getPublic(
  import.meta.env.PUBLIC_VARIABLES,
);
---

<nav>
  <meta data-url-api={urlApi} />
  <x-logo></x-logo>
  <ul class="links--actives">
    <li><a href="#">Soporte</a></li>
    <li><a href="/es/home">Wiki</a></li>
  </ul>
  <ul class="links--inactives">
    <span>Pronto</span>
    <span class="line"></span>
    <li><a href="#">Galeria</a></li>
  </ul>
  <span class="spacer"></span>
  <!-- button github -->
  <a href={urlGithub} target="_blank" class="button button--without-text">
    <i class="ti ti-brand-github button--icon"></i>
  </a>
  <!-- button light/dark mode -->
  <button class="button button--without-text" id="button-theme">
    <i class="ti ti-moon-stars button--icon"></i>
  </button>
  <span class="line"></span>
  <a href="" class="button button--primary">
    <i class="ti ti-cup button--icon"></i>
    <span class="button--text">Regalame un Caf√©</span>
  </a>
  <LoginButton apiUrl={urlApi} oauthCallback={urlOathCallback} client:only />
</nav>
<x-phone>
  <i class="ti ti-menu button--icon"></i>
</x-phone>
<script>
  const apiUrl = document
    .querySelector("meta[data-url-api]")
    ?.getAttribute("data-url-api");
  const buttonTheme = document.getElementById("button-theme");
  let theme =
    document.documentElement.getAttribute("data-theme") ??
    localStorage.getItem("theme");
  const changeTheme = (e: any) => {
    if (!e) return;
    theme = theme === "light" ? "dark" : "light";
    document.documentElement.setAttribute("data-theme", theme);
    localStorage.setItem("theme", theme);
  };
  buttonTheme?.addEventListener("click", changeTheme);
  changeTheme(null);

  const $menu = document.querySelector("x-phone")!;
  const $nav = document.querySelector("nav")!;
  $menu.addEventListener("click", () => {
    $nav.classList.toggle("show-menu");
  });
  $nav.addEventListener("click", (e) => {
    $nav.classList.remove("show-menu");
  });
</script>
<style lang="scss">
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.625rem;
    padding: 1rem;
    border-bottom: 0.0625rem solid var(--font-color-50);
    @media (max-width: 768px) {
      display: none;
    }
  }
  .show-menu {
    display: none;
    @media (max-width: 768px) {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      padding: 40px;
      border-radius: var(--border-radius);
      background: var(--bg-color);
      z-index: var(--z-menu);
    }
  }
  x-phone {
    display: none;
    @media (max-width: 768px) {
      display: block;
      position: sticky;
      top: 20px;
      left: 40px;
      width: min-content;
      cursor: pointer;
      z-index: var(--z-menu-button);
      padding: 1rem;
      gap: 1rem;
      border-radius: var(--border-radius);
      background: var(--font-color-10);
      backdrop-filter: blur(0.25rem);
    }
  }
  .links {
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 1rem;
    a {
      padding: 0.375rem;
      border-radius: var(--border-radius);
      transition: all 0.2s ease-in-out;
    }
    @media (max-width: 768px) {
      flex-direction: column;
      a {
        font-size: 1.5rem;
      }
    }
  }
  .links--actives {
    @extend .links;
    a:hover {
      background: color-mix(in srgb, var(--font-color) 25%, transparent);
      color: var(--font-color);
    }
  }
  .links--inactives {
    @extend .links;
    $color: color-mix(in srgb, var(--secondary-color) 50%, black);
    border: 0.0625rem dashed $color;
    padding: 0.375rem;
    border-radius: var(--border-radius);
    color: $color;
    cursor: not-allowed;
    .line {
      background: $color;
      height: 1rem;
    }
    @media (max-width: 768px) {
      .line {
        display: none;
      }
    }
  }
  .spacer {
    flex-grow: 1;
  }
  .line {
    width: 1px;
    height: 1.5rem;
    flex-shrink: 0;
    background: var(--font-color-50);
    @media (max-width: 768px) {
      display: none;
    }
  }
  #login {
    display: flex;
    align-items: center;
    .avatar {
      position: relative;
      img {
        cursor: pointer;
        width: 2.275rem;
        aspect-ratio: 1;
        border-radius: 50%;
        background: var(--font-color-10);
      }
      .options {
        cursor: pointer;
        display: none;
        position: absolute;
        top: 110%;
        right: 0;
        gap: 0.5rem;
        align-items: center;
        justify-content: center;
        padding: 0.5rem;
        border-radius: var(--border-radius);
        background: var(--font-color-10);
        backdrop-filter: blur(0.5rem);
        li {
          a {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem;
            border-radius: var(--border-radius);
            transition: all 0.2s ease-in-out;
          }
          a:hover {
            background: color-mix(in srgb, var(--font-color) 25%, transparent);
            color: var(--font-color);
          }
        }
      }
      img[active="true"] + .options {
        display: block;
      }
    }
  }
</style>
